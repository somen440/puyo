package game

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestRolling(t *testing.T) {
	tests := []struct {
		title            string
		board            Board
		playerPP         *PuyoPair
		expectedBoard    Board
		expectedPlayerPP *PuyoPair
	}{
		// 普通に回れる
		{
			"→↓",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 2, 1, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{4, 5, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 2, 0, 0},
				{0, 0, 0, 1, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{3, 6, 1},
			},
		},
		{
			"↓←",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 2, 0, 0},
				{0, 0, 0, 1, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{3, 6, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 1, 2, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{2, 5, 1},
			},
		},
		{
			"←↑",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 1, 2, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{2, 5, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 1, 0, 0},
				{0, 0, 0, 2, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{3, 4, 1},
			},
		},
		{
			"↑→",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 1, 0, 0},
				{0, 0, 0, 2, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{3, 4, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 2, 1, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{3, 5, 2},
				Second: &Puyo{4, 5, 1},
			},
		},

		// 壁にぶつかる
		{
			"↑→（壁）",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 1},
				{0, 0, 0, 0, 0, 2},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{5, 5, 2},
				Second: &Puyo{5, 4, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 1},
				{0, 0, 0, 0, 0, 2},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{5, 5, 2},
				Second: &Puyo{5, 4, 1},
			},
		},
		{
			"→↓（壁）",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 2, 1, 0, 0},
			},
			&PuyoPair{
				First:  &Puyo{2, 11, 2},
				Second: &Puyo{3, 11, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 2, 1, 0, 0},
			},
			&PuyoPair{
				First:  &Puyo{2, 11, 2},
				Second: &Puyo{3, 11, 1},
			},
		},
		{
			"↓←（壁）",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 0, 0, 0, 0, 0},
				{1, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{0, 4, 2},
				Second: &Puyo{0, 5, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 0, 0, 0, 0, 0},
				{1, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{2, 1, 2, 1, 2, 1},
				{1, 2, 1, 2, 1, 2},
			},
			&PuyoPair{
				First:  &Puyo{0, 4, 2},
				Second: &Puyo{0, 5, 1},
			},
		},

		// 回り先に石あり
		{
			"↑→（石）",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 1, 1, 0},
				{0, 0, 0, 2, 2, 0},
				{0, 0, 0, 0, 1, 0},
				{0, 0, 0, 0, 2, 0},
				{0, 0, 0, 0, 1, 0},
			},
			&PuyoPair{
				First:  &Puyo{3, 8, 2},
				Second: &Puyo{3, 7, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 1, 1, 0},
				{0, 0, 0, 2, 2, 0},
				{0, 0, 0, 0, 1, 0},
				{0, 0, 0, 0, 2, 0},
				{0, 0, 0, 0, 1, 0},
			},
			&PuyoPair{
				First:  &Puyo{3, 8, 2},
				Second: &Puyo{3, 7, 1},
			},
		},
		{
			"→↓（石）",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 2, 1, 0},
				{0, 0, 0, 3, 3, 0},
				{0, 0, 0, 2, 1, 0},
				{0, 0, 0, 1, 2, 0},
				{0, 0, 0, 2, 1, 0},
			},
			&PuyoPair{
				First:  &Puyo{3, 7, 2},
				Second: &Puyo{4, 7, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 2, 1, 0},
				{0, 0, 0, 3, 3, 0},
				{0, 0, 0, 2, 1, 0},
				{0, 0, 0, 1, 2, 0},
				{0, 0, 0, 2, 1, 0},
			},
			&PuyoPair{
				First:  &Puyo{3, 7, 2},
				Second: &Puyo{4, 7, 1},
			},
		},
		{
			"↓←（石）",
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 2, 0, 0, 0, 0},
				{0, 1, 2, 0, 0, 0},
				{0, 2, 1, 0, 0, 0},
				{0, 1, 0, 0, 0, 0},
				{0, 2, 0, 0, 0, 0},
			},
			&PuyoPair{
				First:  &Puyo{2, 8, 2},
				Second: &Puyo{2, 9, 1},
			},
			Board{
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 0, 0, 0, 0, 0},
				{0, 2, 0, 0, 0, 0},
				{0, 1, 2, 0, 0, 0},
				{0, 2, 1, 0, 0, 0},
				{0, 1, 0, 0, 0, 0},
				{0, 2, 0, 0, 0, 0},
			},
			&PuyoPair{
				First:  &Puyo{2, 8, 2},
				Second: &Puyo{2, 9, 1},
			},
		},
	}
	for _, tt := range tests {
		t.Run(tt.title, func(t *testing.T) {
			actualBoard, actualPlayerPP := Rolling(tt.board, tt.playerPP)
			assert.Equal(t, tt.expectedBoard, actualBoard)
			assert.Equal(t, tt.expectedPlayerPP, actualPlayerPP)
		})
	}
}
